jmp :_0_

:228    % FUNC START
pop [0]
pop [1]
pop [2]
push [1]
push [1]
mul
push 4
push [0]
mul
push [2]
mul
sub
pop [3]
push [3]
push 0
ja :TRUE_1         % COMPARISON
push 0
jmp :FALSE_1
:TRUE_1
push 1
:FALSE_1           % COMPARISON END
push 0      % IF START
je :FALSE_COND_0
push 0
out
:FALSE_COND_0      % IF END
push [3]
push 0
je :TRUE_2         % COMPARISON
push 0
jmp :FALSE_2
:TRUE_2
push 1
:FALSE_2           % COMPARISON END
push 0      % IF START
je :FALSE_COND_1
push 1
out
push 0
push [1]
sub
push 2
push [0]
mul
div
pop [4]
push [4]
out
:FALSE_COND_1      % IF END
push [3]
push 0
jb :TRUE_3         % COMPARISON
push 0
jmp :FALSE_3
:TRUE_3
push 1
:FALSE_3           % COMPARISON END
push 0      % IF START
je :FALSE_COND_2
push 2
out
push 0
push [1]
sub
push [3]
sqrt
add
push 2
push [0]
mul
div
pop [5]
push [5]
out
push 0
push [1]
sub
push [3]
sqrt
sub
push 2
push [0]
mul
div
pop [6]
push [6]
out
:FALSE_COND_2      % IF END
ret    % FUNC END

:1337    % FUNC START
pop [7]
pop [8]
push [7]
push 0
je :TRUE_4         % COMPARISON
push 0
jmp :FALSE_4
:TRUE_4
push 1
:FALSE_4           % COMPARISON END
push 0      % IF START
je :FALSE_COND_3
push [8]
push 0
je :TRUE_5         % COMPARISON
push 0
jmp :FALSE_5
:TRUE_5
push 1
:FALSE_5           % COMPARISON END
push 0      % IF START
je :FALSE_COND_4
push 8
out
:FALSE_COND_4      % IF END
push [8]
push 0
jne :TRUE_6         % COMPARISON
push 0
jmp :FALSE_6
:TRUE_6
push 1
:FALSE_6           % COMPARISON END
push 0      % IF START
je :FALSE_COND_5
push 0
out
:FALSE_COND_5      % IF END
push 0
ret
:FALSE_COND_3      % IF END
push 0
push [8]
sub
push [7]
div
pop [9]
push [9]
out
ret    % FUNC END

:_0_    % FUNC START
push 0
pop [10]
push 0
pop [11]
push 0
pop [12]
push 0
pop [13]
in
pop [10]
in
pop [11]
in
pop [12]
push [10]
push 0
je :TRUE_7         % COMPARISON
push 0
jmp :FALSE_7
:TRUE_7
push 1
:FALSE_7           % COMPARISON END
push 0      % IF START
je :FALSE_COND_6
push [12]
push [11]
call :1337    % CALLING FUNC
pop rax
push rax
pop [13]
:FALSE_COND_6      % IF END
push [10]
push 0
jne :TRUE_8         % COMPARISON
push 0
jmp :FALSE_8
:TRUE_8
push 1
:FALSE_8           % COMPARISON END
push 0      % IF START
je :FALSE_COND_7
push [12]
push [11]
push [10]
call :228    % CALLING FUNC
pop rax
push rax
pop [13]
:FALSE_COND_7      % IF END
push 5
push 10
mul
push 7
add
pop [14]
push [14]
out
push [14]
out
push [13]
ret
ret    % FUNC END
hlt
